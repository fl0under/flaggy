[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "flaggy"
version = "0.1.0"
description = "A little LLM powered friend to find flags in CTFs"
authors = [{name = "fl0under"}]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "dspy-ai>=2.4.0",
    "psycopg[binary]>=3.1.0",
    "docker>=6.0.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "click>=8.0.0",
    "exegol>=5.1.1",
    "textual>=6.1.0",
    "pyperclip>=1.9.0",
    "requests>=2.32.5",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
flaggy = "ctf_solver.scripts.run:main"
flaggy-setup-db = "ctf_solver.scripts.setup_db:main"
flaggy-tui = "ctf_solver.ui.textual.app:run"

[project.urls]
Homepage = "https://github.com/fl0under/flaggy"
Repository = "https://github.com/fl0under/flaggy"
Issues = "https://github.com/fl0under/flaggy/issues"

[tool.hatch.build.targets.wheel]
packages = ["ctf_solver"]

[tool.black]
line-length = 100
target-version = ['py39']

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["ctf_solver"]
omit = ["tests/*", "ctf_solver/scripts/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
