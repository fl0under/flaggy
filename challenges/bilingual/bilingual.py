DATA=''
import argparse,base64,ctypes,zlib,pathlib,sys
PASSWORD='cheese'
FLAG='jqsD0um75+TyJR3z0GbHwBQ+PLIdSJ+rojVscEL4IYkCOZ6+a5H1duhcq+Ub9Oa+ZWKuL703'
KEY='68592cb91784620be98eca41f825260c'
HELPER=None
def decrypt_flag(password):A='utf-8';flag=bytearray(base64.b64decode(FLAG));buffer=(ctypes.c_byte*len(flag)).from_buffer(flag);key=ctypes.create_string_buffer(password.encode(A));result=get_helper().Decrypt(key,len(key)-1,buffer,len(buffer));return flag.decode(A)
def get_helper():
	global HELPER
	if HELPER:return HELPER
	data=globals().get('DATA')
	if data:
		dll_path=pathlib.Path(__file__).parent/'hello.bin'
		if not dll_path.is_file():
			with open(dll_path,'wb')as dll_file:dll_file.write(zlib.decompress(base64.b64decode(data)))
		HELPER=ctypes.cdll.LoadLibrary(dll_path)
	else:0
	return HELPER
def check_three(password):return check_ex(password,'Check3')
def check_four(password):return check_ex(password,'Check4')
def check_ex(password,func):
	GetIntCallbackFn=ctypes.CFUNCTYPE(ctypes.c_int,ctypes.c_wchar_p)
	class CallbackTable(ctypes.Structure):_fields_=[('E',GetIntCallbackFn)]
	@GetIntCallbackFn
	def eval_int(v):return int(eval(v))
	table=CallbackTable(E=eval_int);helper=get_helper();helper[func].argtypes=[ctypes.POINTER(CallbackTable)];helper[func].restype=ctypes.c_int;return helper[func](ctypes.byref(table))
def check_two(password):
	@ctypes.CFUNCTYPE(ctypes.c_int,ctypes.c_int)
	def callback(i):return ord(password[i-3])+3
	return get_helper().Check2(callback)
def check_one(password):
	if len(password)!=12:return False
	return get_helper().Check1(password)!=0
def check_password(password):
	global PASSWORD;PASSWORD=password;checks=[check_one,check_two,check_three,check_four];result=True
	for check in checks:result=result and check(password)
	return result
def main():
	parser=argparse.ArgumentParser(description='CTF Challenge');parser.add_argument('password',help='Enter the password');args=parser.parse_args()
	if check_password(args.password):flag=decrypt_flag(args.password);print('Correct! The flag is DUCTF{%s}'%flag);return 0
	else:print('That is not correct');return 1
if __name__=='__main__':sys.exit(main())